#!/bin/bash

#Se guarda la version del script
version="1.0.0"

#Show to the user the information of the script
help(){
	echo "
		NAME
			docli - manage docker-compose stacks centrally
		SYNOPSYS
			docli [OPTION] ... [DIRECTORY] ...
		DESCRIPTION
			Manage multiple docker-compose stacks with a single command.
			--all apply the command to all groups in the inventory
			--context[=CTX] inventory group to apply the command
			--help display this help message and exit
			--version output version information and exit
			 The OPTIONS supported include:
				Create: Creates a new empty directory. Must be followed by
				the --context flag. The directory name will be the one
				passed within the context. E.g.:
				docli create --context=stack_1
				
				Up: Passes the \"docker-compose up -d\" command to the
				specified context. Can be used with --context or --all.
				docli up --context=stack_1
				
				Down: Passes the \"docker-compose down -d\" command to the
				specified context. Can be used with --context or --all.
				docli down --all
	"
}

#Show the script's version to the user
version(){
	echo "version: $version"
}
#Check if have --context= and if all ok
#Create a directory
#@arg = $2
create(){
	case $1 in 
		--context=*)
			if [[ "${1##*=}" == "stack_"* && "${1##*_}" =~ ^[0-9]+$ ]]
			then
				if ! [ -d ${1##*=} ]
				then 
					mkdir "${1##*=}"
				else
					echo "There is a directory with this name already"
				fi
			else
				echo "Format not correct try: stack_N"
			fi
			;;
		*)
			echo "--context=[] expected"
			;;
	esac
}
#Check if pass -all or a group of the directories and call check_compose
#In -all get all the directories
#arg=$1
#arg=$2
context_op(){
	if [ "$2" == "--all" ];
	then
		list="$(ls -d */ | grep -F stack_)"
		check_compose $1 $list
	elif [[ ${2:0:10} == "--context=" ]]
	then
		group="${2##*=}"
		list=($( awk "/\[$group\]/{flag=1; next} /\[/{flag=0} flag" inventary ))
		if [ ${#list[@]} != 0 ]
		then
			check_compose $1 $list
		else
			echo "The group [$group] don't exist"
		fi
	else
		echo "format error try: --context=[]"
	fi
}

#Check if the directory have a docker-compose and depend of arg1 up or down the doker-compose
#@arg1=$1
#@arg2=$list
check_compose(){
	for i in ${list[@]}
	do
		cd $i
		if [[ $(find . -name 'docker-compose.yml' | wc -l) -gt 0 ]]
		then
			{
				docker-compose $1 -d
			}|| echo "Error with the docker-compose"
		else
			echo "The directory: $i doesn't have docker-compose"
		fi

		cd .. 
	done
	
}

#################################################
########### THE MAIN ############################
#################################################

case $1 in
	--help)
		help
		;;
	--version)
		version
		;;
	create)
		create $2
		;;
	up)
		context_op $1 $2
		;;
	down) 
		context_op $1 $2
		;;
	*)
		echo "ERROR TRY WITH: docli [OPTION] ... [DIRECTORY] ..."
		;;
esac
